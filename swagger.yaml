openapi: 3.0.0
info:
  title: Combined API
  version: 1.0.0
  description: Combined API documentation for User Management and Todo Management.

servers:
  - url: http://43.202.203.36:3000/api

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: User
    description: API for user management operations
  - name: Todo
    description: API for todo management operations

paths:
  /signup:
    post:
      tags:
        - User
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                password:
                  type: string
                username:
                  type: string
                isStudy:
                  type: boolean
              required:
                - userId
                - password
                - username
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  username:
                    type: string
                  isStudy:
                    type: boolean
        '400':
          description: Invalid input data

  /login:
    post:
      tags:
        - User
      summary: Authenticate user and obtain a JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                password:
                  type: string
              required:
                - userId
                - password
      responses:
        '200':
          description: Login successful, returns a JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Authentication failed

  /users:
    get:
      tags:
        - User
      summary: Get user by ID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  username:
                    type: string
                  isStudy:
                    type: boolean
        '404':
          description: User not found

    put:
      tags:
        - User
      summary: Update user details
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          description: The ID of the user to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                isStudy:
                  type: boolean
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  username:
                    type: string
                  isStudy:
                    type: boolean
        '404':
          description: User not found

    delete:
      tags:
        - User
      summary: Delete user by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          description: The ID of the user to delete
          schema:
            type: string
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found

  /users/search:
    get:
      tags:
        - User
      summary: Search for users by userId
      description: Search for users by providing part or full of userId using a 'like' query
      parameters:
        - in: query
          name: searchUser
          required: true
          schema:
            type: string
          description: "The partial or full userId to search for"
      responses:
        '200':
          description: User search successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        userId:
                          type: string
                          example: "john_doe123"
                        username:
                          type: string
                          example: "John Doe"
                        isStudy:
                          type: boolean
                          example: true
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "User not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "An error occurred while searching for the user"

  /users/{userId}/weeklyNote:
    put:
      tags:
        - User
      summary: Update user's weekly note
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          description: The ID of the user to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                weeklyNote:
                  type: string
      responses:
        '200':
          description: Weekly note updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  weeklyNote:
                    type: string
        '404':
          description: User not found

  /todos:
    post:
      tags:
        - Todo
      summary: Create a new todo
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "My new todo"
                contents:
                  type: string
                  example: "Details about my new todo"
                isCheck:
                  type: boolean
                  example: false
      responses:
        '201':
          description: Todo created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: "My new todo"
                  contents:
                    type: string
                    example: "Details about my new todo"
                  isCheck:
                    type: boolean
                    example: false
        '401':
          description: Not authenticated
        '500':
          description: Internal server error

    get:
      tags:
        - Todo
      summary: Get all todos
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of todos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    title:
                      type: string
                      example: "My new todo"
                    contents:
                      type: string
                      example: "Details about my new todo"
                    isCheck:
                      type: boolean
                      example: false
        '401':
          description: Not authenticated
        '500':
          description: Internal server error

  /todos/{todoId}:
    get:
      tags:
        - Todo
      summary: Get a todo by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: todoId
          required: true
          description: ID of the todo to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Todo retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: "My new todo"
                  contents:
                    type: string
                    example: "Details about my new todo"
                  isCheck:
                    type: boolean
                    example: false
        '404':
          description: Todo not found
        '401':
          description: Not authenticated
        '500':
          description: Internal server error

    put:
      tags:
        - Todo
      summary: Update a todo
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: todoId
          required: true
          description: ID of the todo to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Updated todo"
                contents:
                  type: string
                  example: "Updated details about my todo"
                isCheck:
                  type: boolean
                  example: true
      responses:
        '200':
          description: Todo updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: "Updated todo"
                  contents:
                    type: string
                    example: "Updated details about my todo"
                  isCheck:
                    type: boolean
                    example: true
        '404':
          description: Todo not found
        '401':
          description: Not authenticated
        '500':
          description: Internal server error

    delete:
      tags:
        - Todo
      summary: Delete a todo
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: todoId
          required: true
          description: ID of the todo to delete
          schema:
            type: integer
      responses:
        '204':
          description: Todo deleted successfully
        '404':
          description: Todo not found
        '401':
          description: Not authenticated
        '500':
          description: Internal server error
