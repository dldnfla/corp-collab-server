openapi: 3.0.0
info:
  title: User Management API
  version: 1.0.0
  description: API for user registration, authentication, and management.

servers:
  - url: http://43.202.203.36:3000/api

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /signup:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                password:
                  type: string
                username:
                  type: string
                isStudy:
                  type: boolean
              required:
                - userId
                - password
                - username
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  username:
                    type: string
                  isStudy:
                    type: boolean
        '400':
          description: Invalid input data

  /login:
    post:
      summary: Authenticate user and obtain a JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                password:
                  type: string
              required:
                - userId
                - password
      responses:
        '200':
          description: Login successful, returns a JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Authentication failed

  /users/{userId}:
    get:
      summary: Get user by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          description: The ID of the user to retrieve
          schema:
            type: string
      responses:
        '200':
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  username:
                    type: string
                  isStudy:
                    type: boolean
        '404':
          description: User not found

    put:
      summary: Update user details
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          description: The ID of the user to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                isStudy:
                  type: boolean
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  username:
                    type: string
                  isStudy:
                    type: boolean
        '404':
          description: User not found

    delete:
      summary: Delete user by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          description: The ID of the user to delete
          schema:
            type: string
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found

  /users/{userId}/weeklyNote:
    put:
      summary: Update user's weekly note
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          description: The ID of the user to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                weeklyNote:
                  type: string
      responses:
        '200':
          description: Weekly note updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  weeklyNote:
                    type: string
        '404':
          description: User not found

security:
  - bearerAuth: []
